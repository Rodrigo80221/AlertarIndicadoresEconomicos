<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrHorario.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="trmCotacoes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>129, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>